// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]

priority order
    reset
        then load 
            then inc

    which value goes through multiplexor depending on sel[3] = inc|load|reset
   inc|load|reset
   a 000 whatever - nothing will be remembered
   b 001 reset
   c 010 load
   d 011 reset
   e 100 inc
   f 101 reset
   g 110 load
   h 111 reset

    reset OR load OR inc = register must remember input
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Inc16(in=loopBack, out=incremented);
    Mux8Way16(b=false, c=in, d=false, e=incremented, f=false, g=in, h=false, sel[2]=inc, sel[1]=load, sel[0]=reset, out=mux);
    Or(a=load, b=inc, out=loadOrInc);
    Or(a=loadOrInc, b=reset, out=loadOrIncOrReset);
    Register(in=mux, load=loadOrIncOrReset, out=out, out=loopBack);
}
